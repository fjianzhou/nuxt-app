cb1715396887309({"content":"!function(t){var a={};function s(e){if(a[e])return a[e].exports;var n=a[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=t,s.c=a,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},s.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},s.t=function(n,e){if(1&e&&(n=s(n)),8&e)return n;if(4&e&&\"object\"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:n}),2&e&&\"string\"!=typeof n)for(var a in n)s.d(t,a,function(e){return n[e]}.bind(null,a));return t},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,\"a\",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p=\"\",s(s.s=\"./src/txd/index.js\")}({\"./src/common/util/contextUtil.js\":function(e,n,t){\"use strict\";function a(){var e=location.href;return chrome.extension&&e.endsWith(\"background.html\")?\"background\":chrome.extension?\"content\":\"page\"}n.a={getContext:a,isBackground:function(){return\"background\"===a()},isContent:function(){return\"content\"===a()},isPage:function(){return\"page\"===a()}}},\"./src/txd/index.js\":function(e,n,t){\"use strict\";t.r(n);var a,s,r=t(\"./src/common/util/contextUtil.js\");r.a.isContent()?(a=location.href,s=!1,[\"://fxg.jinritemai.com/\",\"://im.jinritemai.com/\"].map(function(e){s=s||-1<a.indexOf(e)}),s&&t(\"./src/txd/js/content.js\")):r.a.isBackground()?t(\"./src/txd/js/background.js\"):r.a.isPage(),n.default={}},\"./src/txd/js/background.js\":function(e,n,t){\"use strict\";t.r(n),setInterval(function(){var s;s=localStorage.messageTabId,chrome.windows.getAll({populate:!0},function(e){for(var n in e){var t,a=e[n].tabs;for(t in a)if(a[t].id+\"\"==s)return void chrome.tabs.sendMessage(parseInt(localStorage.messageTabId),{message:\"你是发送消息的窗口大哥\",msgSetting:localStorage.msgSetting},function(e){console.log(\"发送消息到消息页：\"+e)})}})},5e3),chrome.runtime.onMessage.addListener(function(e,n,t){var a=e.method,s=e.args;if(\"getCookies\"===a)return chrome.cookies.getAll({url:s.url},function(e){t(e)}),!0;if(\"toUrl\"===a)return chrome.tabs.getSelected(null,function(e){var n='window.open(\"'+s.url+'\",\"_blank\");    ';chrome.tabs.executeScript(e.id,{code:n})}),!0;if(\"getTabs\"===a)return chrome.windows.getAll({populate:!0},function(e){for(var n in e){var t,a=e[n].tabs;for(t in a){var s=a[t];console.log(s)}}}),!0;if(\"openMessageTab\"===a){var r=localStorage.messageTabId;return chrome.windows.getAll({populate:!0},function(e){for(var n in e){var t,a=e[n].tabs;for(t in a)if(a[t].id+\"\"==r)return console.log(\"已经存在，就不打开窗口了\"),!0;chrome.tabs.create({url:s.url,active:!1},function(e){console.log(e.id),localStorage.messageTabId=e.id})}}),!0}if(\"closeMessageTab\"!==a)return!0;a=localStorage.messageTabId;try{chrome.tabs.remove(parseInt(a))}catch(e){console.log(e)}return!0}),chrome.extension.onMessage.addListener(function(e,n,t){var a,s;if(\"getData\"==e.action&&(a=e.data,t({status:200,data:localStorage[a.key]})),\"saveData\"==e.action&&(\"orderList\"==(a=e.data).key?(s=[],(s=(r=localStorage[a.key])?JSON.parse(r):s).find(function(e){return e.orderId===a.value.orderId})?console.log(\"存在相同订单，新增失败\"):(console.log(\"新增成功:\"+JSON.stringify(a.value)),s.push(a.value),localStorage[a.key]=JSON.stringify(s))):\"messageTabId\"!=a.key&&\"msgSetting\"!=a.key||(localStorage[a.key]=a.value),t({status:200})),\"delOrder\"==e.action){var r,o=e.data.message;if(r=localStorage.orderList){for(var i in s=JSON.parse(r))s[i]==o&&s.splice(i,1);localStorage.orderList=JSON.stringify(s),t({status:200})}else t({status:501,msg:\"删除失败，未有数据\"})}}),n.default={}},\"./src/txd/js/content.js\":function(e,n,t){\"use strict\";t.r(n);function a(e,n){document.addEventListener(e,function(e){e=e.detail;\"function\"==typeof n&&n(e)},{once:!1,capture:!1})}function s(e){var n=document.createElement(\"script\");n.innerHTML=e,document.body.appendChild(n)}$(document).ready(function(){a(\"openMsgPage\",function(e){chrome.runtime.sendMessage({method:\"openMessageTab\",args:{url:\"https://im.jinritemai.com/pc_seller_v2/main/workspace\"}})}),a(\"closeMsgPage\",function(e){chrome.runtime.sendMessage({method:\"closeMessageTab\",args:{url:\"https://im.jinritemai.com/pc_seller_v2/main/workspace\"}})}),a(\"saveData\",function(e){var n,t;n=\"saveData\",chrome.extension.sendMessage({action:n,data:e},t)}),chrome.extension.onMessage.addListener(function(e,n,t){var a;console.log(e),\"你是发送消息的窗口大哥\"==e.message&&((a=document.querySelector(\"#sendMessagePage\"))?a.setAttribute(\"value\",e.msgSetting):((a=document.createElement(\"meta\")).setAttribute(\"id\",\"sendMessagePage\"),a.setAttribute(\"value\",e.msgSetting),document.querySelector(\"head\").appendChild(a),document.getElementsByTagName(\"title\")[0].innerText=\"飞鸽自动客服\")),t(\"回复内容\")}),function(){var e=window.location.href;0<=e.indexOf(\"fxg.jinritemai.com/ffa/morder/order/list\")&&(n=$(document).find(\"head\"),t='\\n            \\x3c!-- 引入样式 --\\x3e\\n            <link rel=\"stylesheet\" href=\"//ks.gege5.cn/zkKuaiShou/static/css/base.css\">\\n            <link rel=\"stylesheet\" href=\"https://unpkg.com/element-ui@2.13.2/lib/theme-chalk/index.css\">\\n            <script src=\"//ks.gege5.cn/zkKuaiShou/static/js/plugin/vue.min.js\"><\\/script>\\n            <script src=\"//ks.gege5.cn/zkKuaiShou/static/js/plugin/index.js\"><\\/script>\\n            <script src=\"//ks.gege5.cn/zkKuaiShou/static/js/plugin/axios.min.js\"><\\/script>\\n        ',n.append($(t)));{var n;0<=e.indexOf(\"im.jinritemai.com/pc_seller_v2/main/workspace\")&&(n=$(document).find(\"head\"),t='\\n            <script src=\"//ks.gege5.cn/zkKuaiShou/static/js/plugin/axios.min.js\"><\\/script>\\n        ',n.append($(t)),s(\"\\n            //获取消息并发送消息\\n            function getMessage(){\\n                let apiUrl = document.querySelector('#DouYinServerApiUrl').getAttribute('value');\\n                let DouYinSellerId = document.querySelector('#DouYinSellerId').getAttribute('value');\\n\\n                let sendMessagePage = document.querySelector('#sendMessagePage');\\n                if(!sendMessagePage){\\n                    return;//没有这个标识 就不发送信息\\n                }\\n\\n                //获取消息\\n                axios({\\n                    url: apiUrl + '/message/getOneSendMsg',\\n                    method:'post',\\n                    data:{ \\n                        sellerId : DouYinSellerId,\\n                    },\\n                    headers:{\\\"X-Requested-With\\\": \\\"XMLHttpRequest\\\"},\\n                    transformRequest:function(obj) {\\n                        var str = [];\\n                        for ( var p in obj) {\\n                            str.push(encodeURIComponent(p) + \\\"=\\\" + encodeURIComponent(obj[p]));\\n                        }\\n                        return str.join(\\\"&\\\");\\n                    }\\n                }).then(function(res){\\n                    // 具体操作\\n                    if(res.data.success){\\n                        let orderId = res.data.data.orderId;\\n                        let orderStatus = res.data.data.orderStatus;\\n                        if(orderId){\\n                            searchUserByOrderId(orderId);\\n                            //等待几秒钟，看看是否查询到订单\\n                            setTimeout(function () {\\n                                try{\\n                                    clickUserImg();\\n                                    //等待几秒钟，发送消息\\n                                    setTimeout(function () {\\n                                        let messageContent = null;\\n                                        //根据设置发送消息\\n                                        let sendMessageSetting = document.querySelector('#sendMessagePage').getAttribute('value');\\n                                        sendMessageSetting = JSON.parse(sendMessageSetting);\\n                                        if(orderStatus == '1'){//待支付\\n                                            messageContent = sendMessageSetting['待支付'];\\n                                        }else if(orderStatus == '2'){//备货中\\n                                            messageContent = sendMessageSetting['备货中'];\\n                                        }else if(orderStatus == '4'){//已关闭\\n                                            messageContent = sendMessageSetting['已关闭'];\\n                                        }\\n\\n                                        if(messageContent){\\n                                            sendMessage(messageContent);\\n                                        }\\n\\n\\n                                        //下一个循环\\n                                        setTimeout(function () {\\n                                            getMessage();\\n                                        }, 2000);\\n                                    }, 3000);\\n                                }catch(e){\\n                                    //出错了 下一个循环\\n                                    setTimeout(function () {\\n                                        getMessage();\\n                                    }, 1000);\\n                                }\\n                            }, 3000);\\n                        }\\n                    }else{\\n                        //过一会再试\\n                        setTimeout(function () {\\n                            getMessage();\\n                        }, 8000);\\n                    }\\n                    \\n                    \\n                }).catch(function(err){\\n                    console.log(err);\\n                    //出错了，过一会再试\\n                    setTimeout(function () {\\n                        getMessage();\\n                    }, 8000);\\n                });\\n                //axios end\\n\\n            }\\n            setTimeout(function () {\\n                getMessage();\\n            }, 8000);\\n            \\n\\n\\n            //发送消息\\n            function sendMessage(msg) {\\n                try{\\n                    // 改变textarea\\n                    let input = document.querySelector('textarea[data-qa-id=qa-send-message-textarea]')\\n                    input.value = msg\\n                \\n                    // 触发onchange\\n                    let props = window.Object.keys(input)\\n                    let onChangeHandler = null\\n                    for (let i = 0; i < props.length; i += 1) {\\n                        let prop = props[i]\\n                        if (prop.indexOf('__reactEventHandlers') > -1) {\\n                            onChangeHandler = input[prop].onChange\\n                        }\\n                    }\\n                \\n                    // 点击发送按钮\\n                    if (onChangeHandler) {\\n                        onChangeHandler({target: input})\\n                        let submit = document.querySelector('div[data-qa-id=qa-send-message-button]')\\n                        submit.click()\\n                    }\\n                }catch(e){\\n                    console.log(e);\\n                }\\n            }\\n            //通过订单获取用户\\n            function searchUserByOrderId(orderId) {\\n                // 改变textarea\\n                let input = document.querySelector('input[data-qa-id=qa-user-order-search]')\\n                input.value = orderId\\n            \\n                // 触发onchange\\n                let props = window.Object.keys(input)\\n                let onChangeHandler = null\\n                for (let i = 0; i < props.length; i += 1) {\\n                    let prop = props[i]\\n                    if (prop.indexOf('__reactEventHandlers') > -1) {\\n                        onChangeHandler = input[prop].onChange\\n                    }\\n                }\\n            \\n                if (onChangeHandler) {\\n                    onChangeHandler({target: input})\\n                }\\n            }\\n\\n            //点击头像\\n            function clickUserImg() {\\n                let img = document.querySelector('#chantListScrollArea img')\\n                img.click();\\n            }\\n        \"))}{var t;document.querySelector(\"#DouYinServerApiUrl\")||((t=document.createElement(\"meta\")).setAttribute(\"id\",\"DouYinServerApiUrl\"),t.setAttribute(\"value\",\"https://dy.gege5.cn/douyinTool\"),document.querySelector(\"head\").appendChild(t))}}(),function(){var e=\"\",n=window.location.href;0<=n.indexOf(\"fxg.jinritemai.com/ffa/morder/order/list\")&&(e=localStorage.$_CACHE_KEY_SMALLFLOW_UID);0<=n.indexOf(\"im.jinritemai.com/pc_seller_v2/main/workspace\")&&(t=localStorage.allUsedFuncMaps,t=JSON.parse(t),e=t.CHECK_DY_QR_CODE.value[0]);{var t;document.querySelector(\"#DouYinSellerId\")||((t=document.createElement(\"meta\")).setAttribute(\"id\",\"DouYinSellerId\"),t.setAttribute(\"value\",e),document.querySelector(\"head\").appendChild(t))}}(),setTimeout(function(){var e=window.location.href;0<=e.indexOf(\"fxg.jinritemai.com/ffa/morder/order/list\")&&($(document).find('div[data-guide=\"export\"]').parent().append($('\\n\\n        <div id =\"appxxxx\">\\n            <button class=\\'ant-btn ant-btn-danger ant-btn-sm\\' @click=\"getCurrentPage();addDialogVisible=true\"><span id=\"sendMsgBut\">初始化中...</span></button>\\n\\n            <el-dialog style=\"display:none;\"\\n              title=\"\"\\n              :visible.sync=\"addDialogVisible\"\\n              width=\"80%\"\\n              center>\\n\\n              <el-tabs v-model=\"activeName1\" @tab-click=\"statusTabClick\">\\n                    <el-tab-pane label=\"消息设置\" name=\"消息设置\">\\n                         \\x3c!--   ---\\x3e\\n                         <el-form :inline=\"true\"  class=\"demo-form-inline\">\\n                            <el-form-item label=\"发送页数:\">\\n                                    从当前页{{currentPage}} - \\n                                    <el-input placeholder=\"\" size=\"mini\" v-model=\"setting.endPage\" style=\"width:50px;\">\\n                                    </el-input>\\n                                    页\\n                            </el-form-item>\\n                            <el-form-item label=\"发送类型:\">\\n                                    <el-checkbox-group v-model=\"setting.sendOrderStatus\">\\n                                        <el-checkbox label=\"1\" key=\"1\">待支付</el-checkbox>\\n                                        <el-checkbox label=\"2\" key=\"2\">备货中</el-checkbox>\\n                                        <el-checkbox label=\"4\" key=\"4\">已关闭</el-checkbox>\\n                                    </el-checkbox-group>\\n                            </el-form-item>\\n                        </el-form>\\n                        文案设置：<br>\\n                        <el-tabs v-model=\"activeName\">\\n                                <el-tab-pane label=\"待支付\" name=\"待支付\">\\n                                    <el-input  wrap=\"off\"\\n                                        type=\"textarea\"\\n                                        :autosize=\"{ minRows: 14, maxRows: 14}\"\\n                                        placeholder=\"多条内容换行区分\"\\n                                        v-model=\"setting.待支付\">\\n                                    </el-input>\\n                                </el-tab-pane>\\n                                <el-tab-pane label=\"备货中\" name=\"备货中\">\\n                                    <el-input  wrap=\"off\"\\n                                        type=\"textarea\"\\n                                        :autosize=\"{ minRows: 14, maxRows: 14}\"\\n                                        placeholder=\"多条内容换行区分\"\\n                                        v-model=\"setting.备货中\">\\n                                    </el-input>\\n                                </el-tab-pane>\\n                                <el-tab-pane label=\"已关闭\" name=\"已关闭\">\\n                                    <el-input  wrap=\"off\"\\n                                        type=\"textarea\"\\n                                        :autosize=\"{ minRows: 14, maxRows: 14}\"\\n                                        placeholder=\"多条内容换行区分\"\\n                                        v-model=\"setting.已关闭\">\\n                                    </el-input>\\n                                </el-tab-pane>\\n                         </el-tabs>\\n                         <br>\\n                         <div class=\"dialog-footer\">\\n                            <el-button  size=\"mini\" @click=\"addDialogVisible = false\">取 消</el-button>\\n                            <el-button type=\"success\" size=\"mini\" @click=\"saveSendMsgContent\">保存设置</el-button>\\n                            <el-button type=\"success\" size=\"mini\" @click=\"saveSendMsgContent();openMsgPage();getOrder();\" v-show=\"sendBtnStatus\">开始发送</el-button>\\n                            <el-button type=\"danger\" size=\"mini\" @click=\"closeMsgPage\" v-show=\"!sendBtnStatus\">停止发送</el-button>\\n            \\n                           \\n                        </div>\\n                         \\x3c!--   ---\\x3e\\n                    </el-tab-pane>\\n                    <el-tab-pane label=\"消息队列\" name=\"消息队列\">\\n                         \\x3c!--   ---\\x3e\\n                         <el-table ref=\"multipleTable\" :data=\"listTableData\" tooltip-effect=\"dark\" style=\"width: 100%\">\\n                            <el-table-column label=\"序号\" width=100>\\n                            <template slot-scope=\"scope\">\\n                                <span>{{scope.$index + 1}}</span>\\n                            </template>\\n                            </el-table-column>\\n                            <el-table-column prop=\"orderId\" label=\"订单号\">\\n                            </el-table-column>\\n                            <el-table-column label=\"订单状态\">\\n                                <template slot-scope=\"scope\">\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.orderStatus == 0\" type=\"\">..</el-tag>\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.orderStatus == 1\" type=\"info\">待支付</el-tag>\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.orderStatus == 2\" type=\"success\">备货中</el-tag>\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.orderStatus == 3\" type=\"\">..</el-tag>\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.orderStatus == 4\" type=\"danger\">已关闭</el-tag>\\n                                </template>\\n                            </el-table-column>\\n                            <el-table-column label=\"消息发送状态\">\\n                                <template slot-scope=\"scope\">\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.status == 0\" type=\"info\">任务排队</el-tag>\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.status == 1\" type=\"\">已发送</el-tag>\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.status == 311\" type=\"success\">发送成功</el-tag>\\n                                    <el-tag size=\"mini\" v-if=\"scope.row.status == 411\" type=\"danger\">发送失败</el-tag>\\n                                </template>\\n                            </el-table-column>\\n                            <el-table-column label=\"操作\">\\n                                <template slot-scope=\"scope\">\\n                                    <a :href=\"[\\'https://fxg.jinritemai.com/ffa/morder/order/detail-v2?id=\\'+scope.row.orderId]\" target=\"_blank\">查看订单</a>\\n                                </template>\\n                            </el-table-column>\\n                         </el-table>\\n\\n                         <div style=\"padding: 14px 0px;\">\\n                            <div class=\"bottom clearfix\">\\n                                <el-button type=\"success\" size=\"mini\" @click=\"getMsgList(listTableDataCurrentPage)\">刷新</el-button>\\n                                <div class=\"bottom clearfix\" style=\"display:inline;\">\\n                                    <el-pagination\\n                                        background\\n                                        style=\"display:inline;\"\\n                                        layout=\"prev, pager, next\"\\n                                        @current-change=\"listHandleCurrentChange\"\\n                                        :page-count=\"listTableDataPages\"\\n                                        :current-page=\"listTableDataCurrentPage\">\\n                                    </el-pagination>\\n                                </div>\\n                            </div>\\n                        </div>\\n                         \\x3c!--   ---\\x3e\\n                    </el-tab-pane>\\n              </el-tabs>\\n          \\n           </el-dialog>\\n        \\n        </div>\\n        \\n    ')),s(\"\\n    function vueInit(){\\n        try{\\n            let Vue = window.Vue;\\n            let apiUrl = document.querySelector('#DouYinServerApiUrl').getAttribute('value');\\n            let DouYinSellerId = document.querySelector('#DouYinSellerId').getAttribute('value');\\n            new Vue({\\n                //vue start\\n                el: '#appxxxx',\\n                data: function () {\\n                   return {\\n                        apiUrl: apiUrl,\\n                        activeName:'待支付',\\n                        activeName1:'消息设置',\\n                        addDialogVisible: false,\\n                        sendBtnStatus:true,//发送按钮\\n                        setting:{\\n                            '待支付':'待支付',\\n                            '备货中':'备货中',\\n                            '已关闭':'已关闭',\\n                            'startPage':1,\\n                            'endPage':2,\\n                            'sendOrderStatus':[],\\n                        },\\n                        sellerId: DouYinSellerId,\\n                        sellerNick:'未处理',\\n                        currentPage:'',//当前页\\n\\n                        //list\\n                        listTableData:[],\\n                        listTableDataPages:0,//查询后的数据集页数\\n                        listTableDataCurrentPage:0,//当前页\\n                        \\n                   };\\n                },\\n                created: function(){\\n                    this.getSendMsgContent();\\n                    // this.getMsgList(1);\\n                },\\n                methods: {\\n                   /**********************************/\\n                   //状态选择变化\\n                    statusTabClick:function() {\\n                        if(this.activeName1 == '消息队列' && this.listTableDataCurrentPage == 0){\\n                            this.getMsgList(1);\\n                        }\\n                    },\\n                   //分页变化\\n                   listHandleCurrentChange:function(pageNum) {\\n                       this.getMsgList(pageNum);\\n                   },\\n                   getMsgList:function(pageNo) {\\n                        \\n                        let that = this;\\n                        that.listTableDataCurrentPage = pageNo;\\n                        \\n                        //Loading 加载\\n                        that.loading = true;\\n                        \\n                        axios({\\n                            url: that.apiUrl + '/message/getMsgList',\\n                            method:'post',\\n                            data:{ \\n                                sellerId:that.sellerId,\\n                                pageNo : pageNo,\\n                            },\\n                            headers:{\\\"X-Requested-With\\\": \\\"XMLHttpRequest\\\"},\\n                            transformRequest:function(obj) {\\n                                var str = [];\\n                                for ( var p in obj) {\\n                                    str.push(encodeURIComponent(p) + \\\"=\\\" + encodeURIComponent(obj[p]));\\n                                }\\n                                return str.join(\\\"&\\\");\\n                            }\\n                        }).then(function(res){\\n                            // 具体操作\\n                            if(res.data.success){\\n                                //\\n                                that.listTableData = res.data.data.list;\\n                                that.listTableDataPages = parseInt(res.data.data.pages);\\n                                //\\n                                \\n                            }else{\\n                                that.listTableData = [];\\n                                that.$message.error(res.data.message);\\n                            }\\n                            \\n                            that.loading = false;\\n                        }).catch(function(err){\\n                                console.log(err);\\n                                that.loading = false;\\n                                that.$message.error(\\\"网络异常或登录过期,请刷新页面或稍后重试！\\\");\\n                        });\\n                        //axios end\\n                    },\\n\\n                   //获取订单状态\\n                   getOrderListStatus:function() {\\n                        let that = this;\\n                        let currentPage = document.querySelector('.auxo-pagination-item-active');\\n                        that.currentPage = currentPage.innerText;\\n                   },\\n\\n                   //获取当前页\\n                   getCurrentPage:function() {\\n                        let that = this;\\n                        let currentPage = document.querySelector('.auxo-pagination-item-active');\\n                        that.currentPage = currentPage.innerText;\\n                   },\\n\\n                   //打开发送\\n                   openMsgPage:function() {\\n                      this.sendBtnStatus = false;\\n                      //打开消息页\\n                      dispatch('openMsgPage', {});\\n                   },\\n\\n\\n                   //停止发送\\n                   closeMsgPage:function() {\\n                        this.sendBtnStatus = true;\\n                        //打开消息页\\n                        dispatch('closeMsgPage', {});\\n                        this.$message.success(\\\"操作成功\\\");\\n                   },\\n\\n                   //获取订单\\n                   getOrder:function() {\\n                        let that = this;\\n\\n                        if(that.sendBtnStatus){\\n                            return;\\n                        }\\n                    \\n\\n                        //修改标题\\n                        document.getElementsByTagName(\\\"title\\\")[0].innerText  = \\\"订单获取中，请勿关闭页面\\\";\\n\\n                        //\\n                       \\n                        that.getCurrentPage();\\n                        \\n                        //查找订单 存入队列\\n                        that.getOrderList();\\n\\n                        //判断下一页\\n                        let nextPage = (parseInt(that.currentPage) + 1);\\n                        //test\\n                        // if(nextPage == 3){\\n                        //     nextPage = 1;\\n                        // }\\n\\n                        //翻页\\n                        if(that.setting.endPage >= nextPage){\\n                            //点击下一页，等待几秒，执行getOrder\\n                            // auxo-pagination-item-\\n                            let nextPageLi = document.querySelector('.auxo-pagination-item-'+nextPage);\\n                            if(nextPageLi){\\n                                nextPageLi.click();\\n\\n                                setTimeout(function () {\\n                                    that.getOrder();\\n                                }, 5000);\\n                            }else{\\n                                document.getElementsByTagName(\\\"title\\\")[0].innerText  = \\\"订单管理\\\";\\n                            }\\n                        }else{\\n                            document.getElementsByTagName(\\\"title\\\")[0].innerText  = \\\"订单管理\\\";\\n                        }\\n                   },\\n\\n                   //获取订单\\n                   getOrderList:function() {\\n                        var that = this;\\n                        // let orderDivs = $('#orderAppContainer').find('div[data-kora_order_status]');\\n                        // alert(orderDivs.length);\\n\\n                        let orderDivs = document.querySelectorAll('#orderAppContainer div[data-kora_order_status]');\\n                        var list = new Array();\\n                        for (let div of orderDivs) {\\n                            let orderStatus = div.getAttribute(\\\"data-kora_order_status\\\");//订单状态\\n                            let orderId = div.querySelector('div[data-foobar=\\\"true\\\"]').innerText;//订单编号 data-foobar=\\\"true\\\"\\n\\n                            //需要根据状态进行添加\\n                            let sendOrderStatus = that.setting.sendOrderStatus;\\n                            if(sendOrderStatus && sendOrderStatus.indexOf(orderStatus) > -1){\\n                                list.push({\\n                                    'sellerId': that.sellerId,\\n                                    'orderId': orderId.replace('订单编号','').trim(),\\n                                    'orderStatus':orderStatus\\n                                });\\n                            }\\n\\n                            \\n                             // var feige = $(orderDiv).find('img[data-kora=\\\"飞鸽\\\"]');\\n                            // alert(div.attr('data-kora_order_status'));//订单状态\\n                            // alert($(orderDiv).find('div[data-foobar=\\\"true\\\"]').text());//订单编号 data-foobar=\\\"true\\\"\\n                        }\\n\\n                        if(list.length == 0){\\n                            return false;\\n                        }\\n                        //axios start\\n                        axios({\\n                            url: that.apiUrl + '/message/addMessage',\\n                            method:'post',\\n                            data:list,\\n                            headers:{\\\"X-Requested-With\\\": \\\"XMLHttpRequest\\\"},\\n                        }).then(function(res){\\n                            // 具体操作\\n                            console.log(res.data);\\n                        }).catch(function(err){\\n                            console.log(err);\\n                            that.$message.error(\\\"网络异常或登录过期,请刷新页面或稍后重试！\\\");\\n                        });\\n                        //axios end\\n                   },\\n\\n\\n                   //保存设置\\n                   saveSendMsgContent:function() {\\n                        var that = this;\\n\\n                        var seller = {\\n                            id:that.sellerId,\\n                            sellerNick:that.sellerNick,\\n                            settingParam:JSON.stringify(that.setting),\\n                        }\\n\\n                        dispatch('saveData', {\\n                            'key': 'msgSetting',\\n                            'value':JSON.stringify(that.setting)\\n                        });\\n                    \\n                        axios({\\n                            url: that.apiUrl + '/message/saveSetting',\\n                            method:'post',\\n                            data: seller,\\n                            headers:{\\\"X-Requested-With\\\": \\\"XMLHttpRequest\\\"},\\n                        }).then(function(res){\\n                            // 具体操作\\n                            if(res.data.success){\\n                                //\\n                                that.$message.success(res.data.message);\\n                                //\\n                            }else{\\n                                that.$message.error(res.data.message);\\n                            }\\n                            \\n                            that.loading = false;\\n                        }).catch(function(err){\\n                            console.log(err);\\n                            that.loading = false;\\n                            that.$message.error(\\\"网络异常或登录过期,请刷新页面或稍后重试！\\\");\\n                        });\\n                        //axios end\\n                   },\\n\\n                   //查询设置\\n                   getSendMsgContent:function() {\\n                        var that = this;\\n                        axios({\\n                            url: that.apiUrl + '/message/getSetting',\\n                            method:'post',\\n                            data:{ \\n                                sellerId : that.sellerId,\\n                            },\\n                            headers:{\\\"X-Requested-With\\\": \\\"XMLHttpRequest\\\"},\\n                            transformRequest:function(obj) {\\n                                var str = [];\\n                                for ( var p in obj) {\\n                                    str.push(encodeURIComponent(p) + \\\"=\\\" + encodeURIComponent(obj[p]));\\n                                }\\n                                return str.join(\\\"&\\\");\\n                            }\\n                        }).then(function(res){\\n                            // 具体操作\\n                            if(res.data.success){\\n                                //\\n                                that.setting = JSON.parse(res.data.data.settingParam);\\n                                //\\n                            }\\n                            \\n                            that.loading = false;\\n                        }).catch(function(err){\\n                                console.log(err);\\n                                that.loading = false;\\n                                that.$message.error(\\\"网络异常或登录过期,请刷新页面或稍后重试！\\\");\\n                        });\\n                        //axios end\\n                   },\\n\\n                   /**************...***************/\\n                }\\n                \\n                //vue end\\n            });\\n\\n            document.getElementById(\\\"sendMsgBut\\\").innerHTML = \\\"发送消息\\\";\\n        }catch(e){\\n            // console.log(e);\\n            document.getElementById(\\\"sendMsgBut\\\").innerHTML = \\\"初始化失败\\\";\\n        }\\n    };\\n\\n    setTimeout(function () {\\n        vueInit();\\n    }, 8000);\\n\\n    \\n    function dispatch(eventName, data, callback) {\\n        /**\\n         * 开始触发事件\\n         */\\n        let event = new CustomEvent(eventName, {\\n            detail: data,\\n        })\\n        document.dispatchEvent(event)\\n    }\\n    \")),e.indexOf(\"im.jinritemai.com/pc_seller_v2/main/workspace\")},8e3)}),n.default={}}});"})